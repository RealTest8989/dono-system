{"ast":null,"code":"var fetch = require('isomorphic-fetch');\n\nvar host = 'https://translate.google.com';\n/**\n * Get Key from https://translate.google.com\n *\n * @param   {Number!} timeout  default is 10000ms\n * @return  Promise(key: String)\n */\n\nmodule.exports = function (timeout) {\n  return fetch(host, {\n    timeout: timeout || 10 * 1000\n  }).then(function (res) {\n    if (res.status !== 200) {\n      throw new Error('request to ' + host + ' failed, status code = ' + res.status + ' (' + res.statusText + ')');\n    }\n\n    return res.text();\n  }).then(function (html) {\n    const expressions = [\"TKK='(\\\\d+.\\\\d+)';\", \"tkk:'(\\\\d+.\\\\d+)'\"];\n    const matches = expressions.map(expr => html.match(expr)).filter(res => res);\n    if (!matches.length) throw new Error('get key failed from google');\n    return matches[0][1];\n  });\n};","map":{"version":3,"sources":["C:/Users/Lennart/Desktop/dono-system/node_modules/google-tts-api/lib/key.js"],"names":["fetch","require","host","module","exports","timeout","then","res","status","Error","statusText","text","html","expressions","matches","map","expr","match","filter","length"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,kBAAD,CAAnB;;AACA,IAAIC,IAAI,GAAG,8BAAX;AAEA;;;;;;;AAMAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmB;AAClC,SAAOL,KAAK,CAACE,IAAD,EAAO;AACjBG,IAAAA,OAAO,EAAEA,OAAO,IAAI,KAAK;AADR,GAAP,CAAL,CAGNC,IAHM,CAGD,UAAUC,GAAV,EAAe;AACnB,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,YAAM,IAAIC,KAAJ,CAAU,gBAAgBP,IAAhB,GAAuB,yBAAvB,GAAmDK,GAAG,CAACC,MAAvD,GAAgE,IAAhE,GAAuED,GAAG,CAACG,UAA3E,GAAwF,GAAlG,CAAN;AACD;;AACD,WAAOH,GAAG,CAACI,IAAJ,EAAP;AACD,GARM,EASNL,IATM,CASD,UAAUM,IAAV,EAAgB;AACpB,UAAMC,WAAW,GAAG,CAClB,oBADkB,EAElB,mBAFkB,CAApB;AAKA,UAAMC,OAAO,GAAGD,WAAW,CACxBE,GADa,CACTC,IAAI,IAAIJ,IAAI,CAACK,KAAL,CAAWD,IAAX,CADC,EAEbE,MAFa,CAENX,GAAG,IAAIA,GAFD,CAAhB;AAIA,QAAI,CAACO,OAAO,CAACK,MAAb,EAAqB,MAAM,IAAIV,KAAJ,CAAU,4BAAV,CAAN;AAErB,WAAOK,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,CAAP;AACD,GAtBM,CAAP;AAuBD,CAxBD","sourcesContent":["var fetch = require('isomorphic-fetch');\nvar host = 'https://translate.google.com';\n\n/**\n * Get Key from https://translate.google.com\n *\n * @param   {Number!} timeout  default is 10000ms\n * @return  Promise(key: String)\n */\nmodule.exports = function (timeout) {\n  return fetch(host, {\n    timeout: timeout || 10 * 1000\n  })\n  .then(function (res) {\n    if (res.status !== 200) {\n      throw new Error('request to ' + host + ' failed, status code = ' + res.status + ' (' + res.statusText + ')');\n    }\n    return res.text();\n  })\n  .then(function (html) {\n    const expressions = [\n      \"TKK='(\\\\d+.\\\\d+)';\",\n      \"tkk:'(\\\\d+.\\\\d+)'\"\n    ];\n\n    const matches = expressions\n      .map(expr => html.match(expr))\n      .filter(res => res);\n\n    if (!matches.length) throw new Error('get key failed from google');\n\n    return matches[0][1];\n  });\n};\n"]},"metadata":{},"sourceType":"script"}