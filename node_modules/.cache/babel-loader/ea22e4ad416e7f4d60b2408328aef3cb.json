{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lennart\\\\Desktop\\\\dono-system\\\\src\\\\components\\\\alertbox.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport '../alertbox.css';\nimport Speech from 'speak-tts';\nimport ReactPlayer from 'react-player';\nimport Donation_Alert from '../donation-alert.mp3';\nexport default class Alertbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/donations/queue').then(response => {\n      this.setState({\n        donations: response.data,\n        loaded: true\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidUpdate() {\n    const donation = this.state.donations[0];\n    const username = donation.username;\n    const message = donation.message;\n    const amount = donation.amount;\n    const media = donation.media_url;\n    const start_time = donation.start_time; //const donation_alert_file = document.getElementsByClassName(\"donation-alert\")[0];\n    //donation_alert_file.play();\n\n    const speech = new Speech();\n    speech.setLanguage('en-GB');\n    speech.setPitch(1);\n    speech.setRate(0.8);\n    setTimeout(speech.speak({\n      text: `${username} donated $${amount}`\n    }), 6000);\n    speech.speak({\n      text: message\n    });\n  }\n  /*\r\n  <ReactPlayer\r\n  url='https://www.youtube.com/watch?v=ysz5S6PUM-U'\r\n  config={{\r\n      youtube: {\r\n      playerVars: { start: 60, end: 70 }\r\n      }\r\n  }}\r\n  playing\r\n  />\r\n  */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.loaded ? this.state.donations[0].username : 'Loading..'), React.createElement(\"audio\", {\n      className: \"donation-alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: Donation_Alert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"donation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"alert-color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Username\"), \" donated \", React.createElement(\"span\", {\n      className: \"alert-color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"$3\"), \"!\"), React.createElement(\"div\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Hey, whats going on\")), React.createElement(\"div\", {\n      id: \"player\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Lennart/Desktop/dono-system/src/components/alertbox.component.js"],"names":["React","Component","axios","Speech","ReactPlayer","Donation_Alert","Alertbox","constructor","props","state","loaded","componentDidMount","get","then","response","setState","donations","data","catch","error","console","log","componentDidUpdate","donation","username","message","amount","media","media_url","start_time","speech","setLanguage","setPitch","setRate","setTimeout","speak","text","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../alertbox.css';\r\nimport Speech from 'speak-tts';\r\nimport ReactPlayer from 'react-player';\r\nimport Donation_Alert from '../donation-alert.mp3'\r\n\r\nexport default class Alertbox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loaded: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/donations/queue')\r\n            .then(response => {\r\n            this.setState({ donations: response.data, loaded: true })\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const donation = this.state.donations[0];\r\n        const username = donation.username;\r\n        const message = donation.message;\r\n        const amount = donation.amount;\r\n        const media = donation.media_url;\r\n        const start_time = donation.start_time;\r\n\r\n        //const donation_alert_file = document.getElementsByClassName(\"donation-alert\")[0];\r\n        //donation_alert_file.play();\r\n\r\n        const speech = new Speech();\r\n\r\n        speech.setLanguage('en-GB');\r\n        speech.setPitch(1);\r\n        speech.setRate(0.8);\r\n\r\n        setTimeout(speech.speak({\r\n            text: `${username} donated $${amount}`,\r\n        }), 6000);\r\n\r\n        speech.speak({\r\n            text: message,\r\n        });\r\n    }\r\n\r\n                /*\r\n            <ReactPlayer\r\n                url='https://www.youtube.com/watch?v=ysz5S6PUM-U'\r\n                config={{\r\n                    youtube: {\r\n                    playerVars: { start: 60, end: 70 }\r\n                    }\r\n                }}\r\n                playing\r\n            />\r\n            */\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>{this.state.loaded ?  this.state.donations[0].username : 'Loading..'}</p>\r\n                <audio className=\"donation-alert\">\r\n                    <source src={Donation_Alert}></source>\r\n                </audio>\r\n                <div id=\"alert\">\r\n                <div className=\"donation\"><span className=\"alert-color\">Username</span> donated <span className=\"alert-color\">$3</span>!</div>\r\n                <div className=\"message\">Hey, whats going on</div>\r\n                </div>\r\n                <div id=\"player\"></div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}